package org.itson.bdavanzadas.bancobd;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.itson.bdavanzadas.bancobddominio.Retiro;
import org.itson.bdavanzadas.bancobdpersistencia.daos.DatosConexion;
import org.itson.bdavanzadas.bancobdpersistencia.excepciones.PersistenciaException;

/**
 * Representa el dialog Retirar sin cuenta desde menu de inicio, permite 
 * retirar sin cuenta mediante un folio y una contraseña generadas por el 
 * sistema.
 * 
 * La clase proporciona un constructor para instanciar el dialog, además 
 * contiene métodos oyentes para cada botón presente en el menú.
 * 
 * @author Victor Humberto Encinas Guzman & Raul Alejandro Sauceda Rayos
 */
public class dlgRetirarSinCuentaMenuInicial extends javax.swing.JDialog {

    private final DatosConexion datosConexion;

    /**
     * Método constructor que permite inicializar el diálogo para mostrar las 
     * cuentas de un usuario.
     * 
     * @param parent El Frame padre del diálogo.
     * @param modal Indica si el diálogo es modal o no.
     * @param datosConexion Objeto DatosConexion que contiene la información de 
     * conexión a la base de datos.
     */
    public dlgRetirarSinCuentaMenuInicial(java.awt.Frame parent, boolean modal, DatosConexion datosConexion) {
        super(parent, modal);
        initComponents();
        this.datosConexion = datosConexion;
    }

    /**
     * Método que permite validar si el folio y la contraseña son correctos para
     * que se lleva a cabo el retiro sin cuenta.
     */
    private void realizarRetiro() {
        String folio = txtFolio.getText();

        char[] contraseniaArray = pswContrasenia.getPassword();
        String contrasenia = new String(contraseniaArray);

        try {
            Retiro retiro = datosConexion.getRetiroDAO().obtenerPorFolio(folio);
            if (retiro.getFolioRetiro().equals(folio)) {
                if (retiro.getContraseniaRetiro().equals(contrasenia)) {
                    Retiro retiroCompleto = datosConexion.getRetiroDAO().realizarRetiro(retiro.getIdRetiro());
                    if (retiroCompleto != null) {
                        JOptionPane.showMessageDialog(this, "Retiro exitoso", "Retiro sin cuenta", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "No fue posible hacer el retiro", "Retiro sin cuenta", JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "La contraseña no es correcta", "Retiro sin cuenta", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "El folio es incorrecto", "Retiro sin cuenta", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (PersistenciaException ex) {
            Logger.getLogger(dlgRetirarSinCuentaMenuInicial.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "No fue posible hacer el retiro", "Retiro sin cuenta", JOptionPane.INFORMATION_MESSAGE);
        }
        dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fondo = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnConfirmar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        lblCuentaRetiro = new javax.swing.JLabel();
        txtFolio = new javax.swing.JTextField();
        lblContrasenia1 = new javax.swing.JLabel();
        pswContrasenia = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Retirar sin cuenta");
        setResizable(false);

        fondo.setBackground(new java.awt.Color(102, 153, 255));

        jLabel2.setFont(new java.awt.Font("Leelawadee UI", 1, 80)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Retiro sin cuenta");

        btnConfirmar.setBackground(new java.awt.Color(0, 102, 255));
        btnConfirmar.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        btnConfirmar.setForeground(new java.awt.Color(255, 255, 255));
        btnConfirmar.setText("Confirmar");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        btnCancelar.setBackground(new java.awt.Color(0, 102, 255));
        btnCancelar.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        lblCuentaRetiro.setFont(new java.awt.Font("Leelawadee UI", 1, 24)); // NOI18N
        lblCuentaRetiro.setForeground(new java.awt.Color(255, 255, 255));
        lblCuentaRetiro.setText("Folio de operación:");

        txtFolio.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N
        txtFolio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFolioActionPerformed(evt);
            }
        });

        lblContrasenia1.setFont(new java.awt.Font("Leelawadee UI", 1, 24)); // NOI18N
        lblContrasenia1.setForeground(new java.awt.Color(255, 255, 255));
        lblContrasenia1.setText("Contraseña:");

        pswContrasenia.setFont(new java.awt.Font("Leelawadee UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout fondoLayout = new javax.swing.GroupLayout(fondo);
        fondo.setLayout(fondoLayout);
        fondoLayout.setHorizontalGroup(
            fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fondoLayout.createSequentialGroup()
                .addGap(191, 191, 191)
                .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fondoLayout.createSequentialGroup()
                        .addGap(0, 56, Short.MAX_VALUE)
                        .addComponent(btnConfirmar)
                        .addGap(134, 134, 134)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(217, 217, 217))
                    .addGroup(fondoLayout.createSequentialGroup()
                        .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblCuentaRetiro)
                            .addComponent(lblContrasenia1))
                        .addGap(18, 18, 18)
                        .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFolio)
                            .addComponent(pswContrasenia))
                        .addGap(206, 206, 206))))
            .addGroup(fondoLayout.createSequentialGroup()
                .addGap(133, 133, 133)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        fondoLayout.setVerticalGroup(
            fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fondoLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel2)
                .addGap(62, 62, 62)
                .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCuentaRetiro)
                    .addComponent(txtFolio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblContrasenia1)
                    .addComponent(pswContrasenia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(116, 116, 116))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método oyente que permite confirmar el retiro sin cuenta, valida que 
     * ningún campo esté en blanco.
     * 
     * @param evt Evento de dar clic en el botón.
     */
    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        if (!txtFolio.getText().isBlank()) {
            if (!pswContrasenia.getText().isBlank()) {
                realizarRetiro();
            }
        }
    }//GEN-LAST:event_btnConfirmarActionPerformed

    /**
     * Método oyente que permite salir de la opción retiro sin cuenta menu 
     * inicial y redirige al menú de inicio.
     * 
     * @param evt Evento de dar clic en el botón.
     */
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtFolioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFolioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFolioActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JPanel fondo;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblContrasenia1;
    private javax.swing.JLabel lblCuentaRetiro;
    private javax.swing.JPasswordField pswContrasenia;
    private javax.swing.JTextField txtFolio;
    // End of variables declaration//GEN-END:variables
}
